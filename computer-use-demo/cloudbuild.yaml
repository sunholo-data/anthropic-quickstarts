substitutions:
  _IMAGE_NAME: anthropic-computer
  _SERVICE_NAME: anthropic-computer
  _BUILD_DIR: computer-use-demo/
  _ARTIFACT_REGISTRY_REPO_URL: terraform_managed
  _REGION: terraform_managed
  _PROJECT_ID: terraform_managed
  _ANTHROPIC_BUCKET: multivac-internal-dev-dev-anthropic-computer 

tags: ['${_PROJECT_ID}', '${_SERVICE_NAME}']

options:
  logging: GCS_ONLY
logsBucket: gs://multivac-deploy-logging-bucket


steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: ${_BUILD_DIR}
    args: ['build', 
            '-t', '${_ARTIFACT_REGISTRY_REPO_URL}/${_IMAGE_NAME}/${_SERVICE_NAME}:${BRANCH_NAME}', 
            '-f', 'Dockerfile', '.', 
            '--network=cloudbuild']
  
  # Step 2: Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_ARTIFACT_REGISTRY_REPO_URL}/${_IMAGE_NAME}/${_SERVICE_NAME}:${BRANCH_NAME}']
  
  # Step 3: Deploy the container to Google Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    id: deploy cloud run
    dir: ${_BUILD_DIR}
    entrypoint: bash
    args:
      - "-c"
      - |
        gcloud run deploy ${_SERVICE_NAME} --image ${_ARTIFACT_REGISTRY_REPO_URL}/${_IMAGE_NAME}/${_SERVICE_NAME}:${BRANCH_NAME} \
           --region ${_REGION} \
           --project ${_PROJECT_ID} \
           --platform managed \
           --memory 4Gi \
           --cpu 2 \
           --min-instances 0 \
           --max-instances 1 \
           --session-affinity \
           --update-secrets=ANTHROPIC_API_KEY=ANTHROPIC_API_KEY:latest \
           --set-env-vars="API_PROVIDER=vertex" \
           --set-env-vars="CLOUD_ML_REGION=${_REGION}" \
           --set-env-vars="ANTHROPIC_VERTEX_PROJECT_ID=${_PROJECT_ID}" \
           --timeout=25m \
           --add-volume name=gcs_anthropic,type=cloud-storage,bucket=${_ANTHROPIC_BUCKET},readonly=false \
           --add-volume-mount volume=gcs_anthropic,mount-path=/home/computeruse/.anthropic

